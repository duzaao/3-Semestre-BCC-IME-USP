

using namespace std;

typedef struct No {
    bool is2no;
    Key ch1;
    Item val1;
    Key ch2;
    Item val2;
    No* p1;
    No* p2;
    No* p3;

   No(bool is2no, Key ch1, Item val1, Key ch2, Item val2, No* p1, No* p2, No* p3) : is2no(is2no), ch1(ch1), val1(val1), ch2(ch2), val2(val2), p1(p1), p2(p2), p3(p3) {}

} No;

No* put24(No* raiz, Key key, Item val, bool &cresceu)
{
    if (raiz == nullptr) {
        raiz = new No(true, key, val, 0, 0, nullptr, nullptr, nullptr);
        cresceu = true;
        return raiz;
    }

    if (raiz->p1 != nullptr)  // Raiz é folha
        if (raiz->ch1 > key) {
            No* p = put24(raiz->p1, key, val, cresceu);
            if (cresceu) { // houve split
                if (raiz->is2no) {
                    raiz->ch2 = raiz->ch1;
                    raiz->val2 = raiz->val1;
                    raiz->p3 = raiz->p2;
                    raiz->ch1 = p->ch1;
                    raiz->val1 = p->val1;
                    raiz->p2 = p->p2;
                    cresceu = false;
                    raiz->is2no = false;
                    return raiz;
                }
                else { /* raiz é um 3 nó */
                    No* novo = new No(true, raiz->ch2, raiz->val2, 0, 0, raiz->p3, raiz->p2, nullptr);
                    No* nraiz = new No(true, raiz->ch1, raiz->val1, 0, 0, raiz, novo, nullptr);
                    raiz->ch1 = p->ch1; 
                    raiz->val1 = p->val1;
                    raiz->ch2 = 0; 
                    raiz->val2 = 0;
                    raiz->p3 = nullptr;
                    raiz->p2 = p->p2;
                    novo->is2no = raiz->is2no = nraiz->is2no = true;
                    cresceu = true;
                    delete (p);
                    return nraiz;  
                }
            } /*if(cresceu)*/
            else{ /* não cresceu */
                raiz->p1 = p;
                cresceu = false;
                return raiz;
            }
        } /* if(raiz < key)*/
        else if(raiz->is2no || raiz->ch2 > key){
            if(raiz->ch2 > key){
                No * p = put24(raiz->p2, key, val, cresceu);
                if (cresceu) { // houve split
                    if (raiz->is2no) {
                        raiz->ch2 = p->ch1;
                        raiz->val2 = p->val1;
                        raiz->p3 = p->p2;
                        cresceu = false;
                        return raiz;
                    }
                    else { /* raiz é um 3 nó */
                        No* novo = new No(true, p->ch1, p->val1, 0,0, nullptr,p->p2,nullptr);
                        novo->ch1 = p->ch1;
                        novo->val1 = p->val1;
                        novo->p2 = p->p2;
                        No * nraiz = new No(true, raiz->ch2, raiz->val2, 0, 0, raiz, novo, nullptr);
                        raiz->ch2 = 0; 
                        raiz->val2 = 0;
                        raiz->p3 = nullptr;
                        cresceu = true;
                        novo->is2no = raiz->is2no = nraiz->is2no = true;
                        return nraiz;
                    }
                } /*if(cresceu)*/
                else{ /* não cresceu */
                    raiz->p2 = p;
                    cresceu = false;
                    return raiz;
                }
            }
            else{ // raiz->ch2 == key
                raiz->val2 = val;
                return raiz;
            }
        }

}/* fim do codigo */